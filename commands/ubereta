#!/usr/bin/env okshell

var loc = location();

// http://fiddle.jshell.net/4mHW9/52/light/
String.prototype.padRight = function(l,c) {return this+Array(l-this.length+1).join(c||" ")}

function staticMap(start, dest, route) {
  var markers = [];
  markers.push("pin-m-marker+CCC(" + start.longitude + "," + start.latitude + ")");
  markers.push("pin-m-marker+CCC(" + dest.longitude + "," + dest.latitude + ")");

  if (route) {
    markers.push("path-2+f44-0.75+f44-0.0(${encodeURIComponent(route)})");
  }

  return "https://api.mapbox.com/v4/mapbox.dark/" + markers.join(",") + "/auto/300x300.png";
};

var possibleDestinations = query("https://api.mapbox.com/geocoding/v5/mapbox.places/${arguments.join('+')}.json?proximity=${loc.longitude},${loc.latitude}");

destination = possibleDestinations.features[0].center;

var dest = {
  "latitude": destination[1],
  "longitude": destination[0]
};

var route = query("https://api.mapbox.com/directions/v5/mapbox/driving/${loc.longitude},${loc.latitude};${dest.longitude},${dest.latitude}?overview=full&geometries=polyline");

show(staticMap(loc, dest, route.routes[0].geometry));

var prices = query("https://api.uber.com/v1/estimates/price?start_latitude=${loc.latitude}&start_longitude=${loc.longitude}&end_latitude=${dest.latitude}&end_longitude=${dest.longitude}");
var times = query("https://api.uber.com/v1/estimates/time?start_latitude=${loc.latitude}&start_longitude=${loc.longitude}&end_latitude=${dest.latitude}&end_longitude=${dest.longitude}");

prices.prices.forEach(function(estimate) {
  var eta = "N/A";

  times.times.forEach(function(estimated_time) {
    if (estimated_time.product_id === estimate.product_id) {
      eta = (estimated_time.estimate / 60) + " min";
    }
  });

  print(estimate.localized_display_name.padRight(15) + "\t" + "(" + estimate.surge_multiplier + "x)\t" + estimate.estimate + "\t" + eta);
});

